{"version":3,"sources":["Component/Pagination/Posts.jsx","Component/Pagination/Pagination.jsx","App.js","index.js"],"names":["posts","loading","className","map","post","title","Pagination","postPerPage","totalPosts","paginate","currentPage","maxPageNumberLimit","minPageNumberLimit","setCurrentPage","setMaxPageNumberLimit","pageNumberLimit","setMinPageNumberLimit","setPostPerPage","pageNumber","i","Math","ceil","push","handleNextBtn","handlePrevBtn","onClick","console","log","number","href","length","disabled","App","useState","setPosts","setLoading","useEffect","a","axios","get","res","data","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c75a29d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Posts.css'\r\n\r\nconst posts = ({posts, loading}) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='listGroup'>\r\n            {\r\n                posts.map(post => {\r\n                    return <li key='post.id' className='listItem'>\r\n                        {post.title}\r\n                    </li>\r\n                })\r\n            }\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default posts\r\n","import React from 'react'\r\nimport './Pagination.css'\r\n\r\n    // let pageIncrementBtn = null;\r\n    // let pageIncrementBtn = null;\r\nconst Pagination = ({postPerPage, totalPosts, paginate, currentPage, maxPageNumberLimit, minPageNumberLimit, setCurrentPage, setMaxPageNumberLimit, pageNumberLimit, setMinPageNumberLimit, setPostPerPage }) => {\r\n\r\n    const pageNumber = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n       pageNumber.push(i);\r\n    }\r\n\r\n    const handleNextBtn = () => {\r\n        setCurrentPage(currentPage+1);\r\n\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n            \r\n        }\r\n    }\r\n\r\n    const handlePrevBtn = () => {\r\n        setCurrentPage(currentPage-1);\r\n\r\n        if ((currentPage -1)%pageNumberLimit == 0) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n        }\r\n    }\r\n\r\n    function pageIncrementBtn() {\r\n        console.log(\"It working INCREASING!\")\r\n        handleNextBtn();\r\n    }\r\n\r\n    function pagesDecrementBtn () {\r\n        console.log(\"It working DECREASING!\")\r\n        handlePrevBtn();\r\n    }\r\n\r\n    const lordmore = () => {\r\n        setPostPerPage(postPerPage + 5)\r\n    }\r\n\r\n    const lordless = () =>{\r\n        setPostPerPage(postPerPage - 5)\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <nav className='nav'>\r\n            <ul className='pagination'>\r\n                <li className='btn'>\r\n                    <button onClick={handlePrevBtn}>Prev</button>\r\n                </li>\r\n               {/* <li className='dots'> {pageDecrementBtn}</li> */}\r\n                {minPageNumberLimit >= 1 ? <li className='dots' onClick={pagesDecrementBtn}>...</li> : null}\r\n                {\r\n                    pageNumber.map(number => {\r\n                        if (number < maxPageNumberLimit+1 && number>minPageNumberLimit) {\r\n                            return <li key={number} className={currentPage == number ? 'active' : null}>\r\n                            <a onClick={()=> paginate(number)} href=\"\" >{number}</a>\r\n                            </li>\r\n                        }\r\n                    })\r\n                }\r\n                {pageNumber.length > maxPageNumberLimit ? <li className='dots' onClick={pageIncrementBtn}>...</li> : null}\r\n                <li className='btn'>\r\n                    <button onClick={handleNextBtn}>Next</button>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className='loadBtns'>\r\n                <button className='loadmore' onClick={lordmore}>Load more</button>\r\n                <button disabled={postPerPage<=5 ? true : false} className='loadless' onClick={lordless}>Load less</button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport Posts from './Component/Pagination/Posts'\nimport Pagination from './Component/Pagination/Pagination'\n\nconst App = () => {\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postPerPage, setPostPerPage] = useState(5)\n  const [pageNumberLimit, setPageNumberLimit] = useState(5)\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5)\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n        setLoading(true)\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/posts`)\n        setPosts(res.data)\n        setLoading(false)\n        // console.log(posts);\n    }\n    \n    fetchPosts()\n  }, [])\n\n  // Get currentPage\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  //Chnage page\n  const paginate = (pageNumber)=> setCurrentPage(pageNumber)\n\n  return (\n    <div className='container'>\n      <h1 className='blogHeader'>My Story Titles</h1>\n      <Posts posts={currentPosts} loading = {loading} />\n      <Pagination currentPage={currentPage} postPerPage={postPerPage} totalPosts = {posts.length} paginate={paginate} maxPageNumberLimit={maxPageNumberLimit} minPageNumberLimit={minPageNumberLimit} setCurrentPage={setCurrentPage} setMaxPageNumberLimit={setMaxPageNumberLimit} pageNumberLimit={pageNumberLimit} minPageNumberLimit={minPageNumberLimit} setMinPageNumberLimit={setMinPageNumberLimit} setPostPerPage={setPostPerPage} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}